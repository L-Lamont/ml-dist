#!/bin/bash

#SBATCH --job-name=example-venv-build
#SBATCH --partition=example-partition
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1
#SBATCH --constraint=a-gpu-constraint
#SBATCH --output=/path/to/logdir/%x.o%j
#SBATCH --error=/path/to/logdir/%x.o%j

msg() { printf "$*\n" >&2; }
die() { msg "!!! $*"; exit 1; }
log() { msg "### $*"; }

module purge >& /dev/null
module load openmpi
module load cuda
module load python
module load gcc
module load cmake

ROOT="/path/to/ml-dist"
cd $ROOT

msg "ROOT: $ROOT"
msg "Current modules"
module list

if [[ ! -f "./venv" ]]; then
    python -m venv venv
fi

source ./venv/bin/activate
[[ -z "$VIRTUAL_ENV" ]] && die "Can't activate $(pwd)/venv"

pip install --no-cache-dir --upgrade pip setuptools

if [[ "$tensorflow" == 1 || "$horovod" == 1 ]]; then
    pip install --no-cache-dir tensorflow
fi

if [[ "$pytorch" == 1 || "$horovod" == 1 ]]; then
    pip install --no-cache-dir torch
fi

if [[ "$mxnet" == 1 || "$horovod" == 1 ]]; then
    pip install --no-cache-dir mxnet
fi

if [[ "$horovod" == 1]]; then
    export HOROVOD_WITH_TENSORFLOW=1
    export HOROVOD_WITH_PYTORCH=1
    export HOROVOD_WITH_MXNET=1
    export HOROVOD_NCCL_INCLUDE=/path/to/nccl/include
    export HOROVOD_NCCL_LIB=/path/to/nccl/lib
    export HOROVOD_GPU_OPERATIONS=NCCL

    pip install --no-cache-dir horovod[all-frameworks]
fi
