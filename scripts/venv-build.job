#!/bin/bash

#SBATCH --job-name=venv-build
#SBATCH --partition=example-test
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1
#SBATCH --constraint=a-gpu-constraint
#SBATCH --output=/path/to/logdir/%x.o%j
#SBATCH --error=/path/to/logdir/%x.o%j

msg() { echo "$*" >&2; }
die() { msg "!!! $*"; exit 1; }
log() { msg "### $*"; }


show_help() {
    msg "Usage: $0 [arguments]"
    msg ""
    msg "Required Argument"
    msg "--venv-path        path to where venv will be created it should include the name as well at not be follwed by a '/'"
    msg ""
    msg "Optional Arguments"
    msg "--tensorflow       install tensorflow or not"
    msg "--torch            install torch or not"
    msg "--mxnet            install mxnet or not"
    msg "--horovod          install horovod or not"
    msg ""
    msg "--tensorflow-pkg   version of tensorflow to install via pip (default tensorflow)"
    msg "--torch-pkgs       comma separarted list of torch, torchvision & torchaudio versions to install via pip (default torch,torchvision,torchaudio)"
    msg "--mxnet-pkg        version of mxnet to install via pip (default mxnet-cu117)"
    msg "--horovod-pkg      version of horovod to install (default horovod)"
    msg ""
    msg "--nccl-path        path to nccl install (horovod build will fail without it)"
    msg "--modules          comma separated list of modules to use"
    msg "--other-env-vars   comma separated list of other environment variables to set"
    msg "--other-pip-pkgs   comma separated list of other pip packages to install"
    msg "-h                 print this help"
    msg ""
    exit 0
}


set_default_args() {
    export VENV_PATH="-1"

    export INSTALL_TENSORFLOW="-1"
    export INSTALL_TORCH="-1"
    export INSTALL_MXNET="-1"
    export INSTALL_HOROVOD="-1"

    export TENSORFLOW_PKG="tensorflow"
    export TORCH_PKGS="torch,torchvision,torchaudio"
    export MXNET_PKG="mxnet-cu117"
    export HOROVOD_PKG="horovod"

    export NCCL_PATH="-1"
    export OTHER_ENV_VARS="-1"
    export OTHER_PIP_PKGS="-1"
    export MODULES_TO_LOAD="-1"
}


basic_arg_checks() {
    [[ "${VENV_PATH}" == -1 ]] && die "--venv-path argument wasn't set"
    [[ -d "$(dirname ${VENV_PATH})" ]] || die "parent directory of ${VENV_PATH} variable does not exist"
    [[ -d "${VENV_PATH}" ]] && die "venv ($VENV_PATH) already exists, delete it or change the argument"

    [[ "${INSTALL_TENSORFLOW}" != 1 && "${INSTALL_TORCH}" != 1 && "${INSTALL_MXNET}" != 1 && "${INSTALL_HOROVOD}" == 1 ]] && die "Horovod requires at least 1 other framework to be installed"
    
    [[ "${NCCL_PATH}" == -1 && "${INSTALL_HOROVOD}" == 1 ]] && die "horovod was set to be installed but --nccl-path wasn't specified"

    [[ "${MODULES_TO_LOAD}" == -1 ]] && msg "!!! WARNING: Did you mean to not load any modules? The script purges all modules"
}


parse_csv_args() {
    if [[ "${MODULES_TO_LOAD}" != -1 ]]; then
        for module in ${MODULES_TO_LOAD//,/ }; do
            module load "$module"
        done
    fi

    if [[ "${OTHER_ENV_VARS}" != -1 ]]; then
        for var in ${OTHER_ENV_VARS//,/ }; do
            export $var
        done
    fi

    if [[ "${OTHER_PIP_PKGS}" != -1 ]]; then
        export OTHER_PIP_PKGS_STRS=""
        for pkg in ${OTHER_PIP_PKGS//,/ }; do
            OTHER_PIP_PKGS_STR="${OTHER_PIP_PKGS_STR} ${pkg}"
        done
    fi

    if [[ "${INSTALL_TORCH}" == 1 ]]; then
        export TORCH_PKGS_STR=""
        for pkg in ${TORCH_PKGS//,/ }; do
            TORCH_PKGS_STR="${TORCH_PKGS_STR} ${pkg}"
        done
    fi
}


list_install_details() {
    msg "DATE: $(date +%F.%T)"
    msg ""
    msg "root: ${ROOT_PATH}"
    msg "venv: ${VENV_PATH}"
    msg ""
    msg "tensorflow: ${INSTALL_TENSORFLOW}"
    msg "torch: ${INSTALL_TORCH}"
    msg "mxnet: ${INSTALL_MXNET}"
    msg "horovod: ${INSTALL_HOROVOD}"
    msg ""
    msg "tensorflow-pkg: ${TENSORFLOW_PKG}"
    msg "torch-pkgs: ${TORCH_PKGS_STR}"
    msg "mxnet-pkg: ${MXNET_PKG}"
    msg "horovod-pkg: ${HOROVOD_PKG}"
    msg ""
    msg "nccl-path: ${NCCL_PATH}"
    msg "other-env-vars: ${OTHER_ENV_VARS}"
    msg "other-pip-pkgs: ${OTHER_PIP_PKGS_STR}"
    msg "modules: ${MODULES_TO_LOAD}"
    msg "Modules currently loaded"
    module list
    msg ""
}


module purge &> /dev/null
set_default_args

long_opts="venv-path:,tensorflow,torch,mxnet,horovod,tensorflow-pkg:,torch-pkgs:,mxnet-pkg:,horovod-pkg:,nccl-path:,modules:,other-env-vars:,other-pip-pkgs:,dry-run"

parsed_args=$(getopt -a -n alphabet -o h -l "${long_opts}" -- "$@")
valid_args=$?
[[ "${valid_args}" != "0" ]] && show_help

echo "Parsed Arguments: $parsed_args"

eval set -- "${parsed_args}"
while : ; do 
    case "$1" in
        -h)               show_help                     ; shift     ;;
        --dry-run)        DRY_RUN="1"                   ; shift     ;;
        --tensorflow)     INSTALL_TENSORFLOW="1"        ; shift     ;;
        --torch)          INSTALL_TORCH="1"             ; shift     ;;
        --mxnet)          INSTALL_MXNET="1"             ; shift     ;;
        --horovod)        INSTALL_HOROVOD="1"           ; shift     ;;
        --venv-path)      VENV_PATH="${2}"              ; shift 2   ;;
        --tensorflow-pkg) TENSORFLOW_PKG="${2}"         ; shift 2   ;;
        --torch-pkgs)     TORCH_PKGS="${2}"             ; shift 2   ;;
        --mxnet-pkg)      MXNET_PKG="${2}"              ; shift 2   ;;
        --horovod-pkg)    HOROVOD_PKG="${2}"            ; shift 2   ;;
        --nccl-path)      NCCL_PATH="${2}"              ; shift 2   ;;
        --modules)        MODULES_TO_LOAD="${2}"        ; shift 2   ;;
        --other-env-vars) OTHER_ENV_VARS="${2}"         ; shift 2   ;;
        --other-pip-pkgs) OTHER_PIP_PKGS="${2}"         ; shift 2   ;;
        --) shift; break ;;
        *)  die "Unexpected option: $1 - this should not happen"
            show_help
    esac
done

basic_arg_checks
parse_csv_args

list_install_details

[[ "${DRY_RUN}" == 1 ]] && die "dryrun complete"

msg "Creating venv at ${VENV_PATH}"
python -m venv "${VENV_PATH}"

source "${VENV_PATH}/bin/activate"
[[ -z "$VIRTUAL_ENV" ]] && die "Can't activate venv at $VENV_PATH"
msg "Activated venv: $VIRTUAL_ENV"

msg "Upgrading pip and setuptools"
pip install --no-cache-dir --upgrade pip setuptools

if [[ ${OTHER_PIP_PKGS} != -1 ]]; then
    msg "Installing other pkgs: ${OTHER_PIP_PKGS_STR}"
    pip install "${OTHER_PIP_PKGS_STR}"
fi

if [[ "$INSTALL_TENSORFLOW" == 1 ]]; then
    msg "Installing tensorflow: ${TENSORFLOW_PKG}"
    pip install --no-cache-dir "$TENSORFLOW_PKG" 
fi

if [[ "$INSTALL_TORCH" == 1 ]]; then
    msg "Installing torch: ${TORCH_PKGS_STR}"
    pip install --no-cache-dir ${TORCH_PKGS_STR}
fi

if [[ "$INSTALL_MXNET" == 1 ]]; then
    msg "Installing mxnet: ${MXNET_PKG}"
    pip install --no-cache-dir "${MXNET_PKG}"
fi

if [[ "$INSTALL_HOROVOD" == 1 ]]; then
    msg "Installing ${HOROVOD_PKG}"

    [[ "${INSTALL_TENSORFLOW}" == -1 ]] && export HOROVOD_WITHOUT_TENSORFLOW=1
    [[ "${INSTALL_TORCH}" == -1 ]] && export HOROVOD_WITHOUT_TORCH=1
    [[ "${INSTALL_MXNET}" == -1 ]] && export HOROVOD_WITHOUT_MXNET=1

    export HOROVOD_WITH_TENSORFLOW="${INSTALL_TENSORFLOW}"
    export HOROVOD_WITH_PYTORCH="${INSTALL_TORCH}"
    export HOROVOD_WITH_MXNET="${INSTALL_MXNET}"
    export HOROVOD_NCCL_HOME="$NCCL_PATH"
    export HOROVOD_NCCL_INCLUDE="$NCCL_PATH/include"
    export HOROVOD_NCCL_LIB="$NCCL_PATH/lib"
    export HOROVOD_GPU_OPERATIONS="NCCL"
    export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$NCCL_PATH"

    msg "Horovod Environment Variables"
    printenv | grep HOROVOD

    pip install --no-cache-dir ${HOROVOD_PKG}
fi

msg "Packages installed"
pip list

msg ""
msg "venv-build has finished"
